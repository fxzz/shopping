<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 	
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shopping.mapper.MemberMapper">

	<delete id="memberDelete" parameterType="String">
		delete from members
		where member_num = #{memberNum}
	</delete>

	<update id="memberUpdate" parameterType="mem">
		update members
		<trim prefix="set" suffixOverrides=",">
			member_Name = #{memberName}, 
			member_ADDR = #{memberAddr},
			<if test="memberAddrDetail != null">
			member_Addr_Detail = #{memberAddrDetail},
			</if>
			<if test="memberAddrDetail == null">
			member_Addr_Detail = null,
			</if>
			member_Post = #{memberPost},
			gender = #{gender},
			member_Phone1 = #{memberPhone1},
			<choose>
				<when test="memberPhone2 != null">
				member_Phone2 =#{memberPhone2},
				</when>
				<when test="memberPhone2 == null">
				member_Phone2 =null,
				</when>
			</choose>
			member_Email =#{memberEmail},
			member_Birth = #{memberBirth},
			point = #{point},
	</trim>
	<where>
		member_num = #{memberNum}
	</where>
</update>

	<select id="memberSelectOne" parameterType="String" resultType="mem">
		select <include refid="memberColumnsBase" />
		from members
		where member_num = #{memberNum}
	</select>

	<delete id="membersDelete" parameterType="string">
		delete from members
		where member_num in
		<foreach collection="membersNum" item="memberNum" open="(" close=")" index="index" separator=",">
			#{memberNum}
		</foreach>
	</delete>

	<select id="memberCount" parameterType="String" resultType="integer">
		select count(*) from members
			<where>
				<if test="searchWord != null">
					MEMBER_NAME like '%' || #{searchWord} || '%'
			  	 or member_id like '%' || #{searchWord} || '%'
			  	 or member_num like '%' || #{searchWord} || '%'
				</if>
			</where>
	</select>

	<sql id="memberColumnsBase">
			 member_num          as memberNum
			, member_id            as memberId
			, member_pw            as memberPw
			, member_name          as memberName
			, member_addr          as memberAddr
			, member_addr_detail   as memberAddrDetail
			, member_post          as memberPost
			, member_phone1        as memberPhone1
			, member_phone2        as memberPhone2
			, member_regist        as memberRegistDate
			, member_birth         as memberBirth
			, gender               as gender
			, member_email         as memberEmail
			, member_email_conf    as memberEmailConf
			, point                as point
	</sql>
	
	<select id="selectAll" resultType="mem" parameterType="startEndPageDTO">
	select * from 
			(select ROW_NUMBER() over (order by member_num) as rn,
					<include refid="memberColumnsBase" />
			from members
			<where>
				<if test="searchWord != null">
					MEMBER_NAME like '%' || #{searchWord} || '%'
			  	 or member_id like '%' || #{searchWord} || '%'
			  	 or member_num like '%' || #{searchWord} || '%'
				</if>
			</where>
			)sub1
	where rn between #{startRow}  and #{endRow}
	</select>
	
	
	
	<select id="memberAutoNum" resultType="String">
    	select concat('mem' , nvl(max(substr(member_num,4)),100000) + 1) 
    	  from members
	</select>


	<insert id="memberInsert" parameterType="mem">
	insert into members(
		member_num
		, member_id
		, member_pw
		, member_name
		, member_addr
		, member_addr_detail
		, member_post
		, member_phone1
		, member_phone2
		, member_regist
		, member_birth
		, gender
		, member_email
		, member_email_conf
		, point
	 ) values(
		#{memberNum}
		, #{memberId}
		, #{memberPw}
		, #{memberName}
		, #{memberAddr}
		, #{memberAddrDetail}
		, #{memberPost}
		, #{memberPhone1}
		, #{memberPhone2}
		, SYSDATE
		, #{memberBirth}
		, #{gender}
		, #{memberEmail}
		, null
		, 0
	)
	</insert>
</mapper>